    static class Queue {
        static class Stack {
            int cap;
            int size;
            int[][] s;
            Stack(int c) {
                s = new int[cap = c][2];
            }
            void push(int item) {
                s[size][1] = size == 0 ? item : max(item, s[size - 1][1]);
                s[size++][0] = item;
            }
            int maxF() {return size == 0 ? Integer.MIN_VALUE : s[size - 1][1]; }
            int pop() { return s[--size][0]; }
        }
        Stack st1;
        Stack st2;
        Queue(int c) {
            st1 = new Stack(c);
            st2 = new Stack(c);
        }
        void enq(int elem) { st1.push(elem);}
        int deq() {
            if(st2.size == 0) {
                while (st1.size != 0) {
                    st2.push(st1.pop());
                }
            }
            return st2.pop();
        }
        int maxF() { return max(st1.maxF(), st2.maxF());}
    }
